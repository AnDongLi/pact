(env-data { "msgkeys": { "keys": ["k"], "pred": ">" } })
(begin-tx)
(define-keyset 'keyset (read-keyset "msgkeys"))
(module tctest 'keyset

  (defschema person
    name:string
    age:integer
    dob:time)

  (deftable persons:{person})

  (defun add-person (person)
    (insert persons (at 'name person) person))

  (defun update-age (name age)
    (update persons name { "age": age }))

  (defun bad-update (name handle)
    (update persons name { "handle": handle }))

  (defun addToAll (i vals:[integer]) (map (+ i) vals))

)

(create-table persons)

(commit-tx)

(use 'tctest)
(expect-failure "missing fields" (add-person { "name": "Mary" }))
(expect-failure "bad field"
                (add-person { "name": "Mary", "age": 20, "dob": (parse-time "%F" "1996-12-31"), "handle": "@mary" }))
(add-person { "name": "Mary", "age": 20, "dob": (parse-time "%F" "1996-12-31") })
(update-age "Mary" 25)
(expect-failure "bad update"
                (bad-update "Mary" "@mary123"))
(expect "int list OK" [2 3 4] (addToAll 1 [1 2 3]))
(expect-failure "bad int list" (addToAll 1 [1 2 3 "hi"]))
